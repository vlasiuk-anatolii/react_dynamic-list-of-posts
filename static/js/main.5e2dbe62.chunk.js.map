{"version":3,"sources":["api/api.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getPosts","userId","a","fetch","response","ok","Error","status","statusText","json","getComments","postId","delComment","id","method","result","postComment","name","email","body","createdAt","updatedAt","headers","JSON","stringify","PostsList","userSelectedId","selectPost","post","setIsLoading","useState","currentPostList","setPostList","findposts","useEffect","className","map","po","type","onClick","undefined","NewCommentForm","commentsList","setCommentsList","yourname","setYourname","youremail","setYouremail","yourcomment","setYourcomment","error","setError","addComment","newComment","afterAdded","onSubmit","event","preventDefault","length","Date","placeholder","value","onChange","target","style","color","PostDetails","visiblecomments","setVisiblecomments","findcomments","deletecomment","title","comm","Loader","App","currentUser","setCurrentUser","selectedPost","setSelectedPost","isLoading","disabled","ReactDOM","render","document","getElementById"],"mappings":"qVAEaA,G,MAAW,sCAEjB,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,yBAA6BE,IADpD,WACCG,EADD,QAGSC,GAHT,sBAIG,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ9C,gCAOEJ,EAASK,QAPX,4C,sBAWA,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAT,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,4BAAgCY,IADvD,WACCP,EADD,QAGSC,GAHT,sBAIG,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ9C,gCAQEJ,EAASK,QARX,4C,sBAWA,SAAeG,EAAtB,kC,4CAAO,WAA0BC,GAA1B,eAAAX,EAAA,sEACgBC,MAAM,GAAD,OAAIJ,EAAJ,qBAAyBc,GAAM,CAAEC,OAAQ,WAD9D,cACCC,EADD,yBAGEA,GAHF,4C,sBAMA,SAAeC,EAAtB,4C,4CAAO,WACLC,EACAC,EACAC,EACAR,EACAS,EACAC,GANK,SAAAnB,EAAA,sEAQCC,MAAM,GAAD,OAAIJ,EAAJ,aAAyB,CAClCe,OAAQ,OACRQ,QAAS,CACP,eAAgB,mCAElBH,KAAMI,KAAKC,UAAU,CACnBb,SACAM,OACAC,QACAC,OACAC,YACAC,gBAnBC,4C,iCCpBMI,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,eACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,KACAC,EACI,EADJA,aAEA,EAAuCC,mBAAiB,IAAxD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEMC,EAAS,uCAAG,4BAAA/B,EAAA,sEACKF,EAAS0B,GADd,OACVX,EADU,OAGhBiB,EAAYjB,GACZc,GAAa,GAJG,2CAAH,qDAWf,OAJAK,qBAAU,WACRD,MACC,CAACP,IAGF,qBAAKS,UAAU,YAAf,SACE,qCACE,wCACA,oBACEA,UAAU,kBACV,UAAQ,cAFV,SAIGJ,EAAgBK,KAAI,SAAAC,GAAE,OACrB,qBACEF,UAAU,kBADZ,UAIE,gCACE,sCAEG,IACAE,EAAGpC,OAHN,KAKG,OAEFoC,EAAGlB,QAEN,wBACEmB,KAAK,SACLH,UAAU,2BACVI,QAAS,WACFX,GAAUA,EAAKf,KAAOwB,EAAGxB,GAC5Bc,OAAWa,GAEXb,EAAWU,GAGbR,GAAa,IAVjB,SAaGD,GAASA,EAAKf,KAAOwB,EAAGxB,GACrB,QACA,WA3BDwB,EAAGxB,eChCT4B,G,MAAkC,SAAC,GAEzC,IADLC,EACI,EADJA,aAAcC,EACV,EADUA,gBAEd,EAAgCb,mBAAS,IAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAAkCf,mBAAS,IAA3C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAAsCjB,mBAAS,IAA/C,mBAAOkB,EAAP,KAAoBC,EAApB,KACA,EAA0BnB,oBAAS,GAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KAEMC,EAAU,uCAAG,WAAOC,GAAP,eAAAnD,EAAA,0DACbwC,EADa,uBAEf1B,EACEqC,EAAWpC,KACXoC,EAAWnC,MACXmC,EAAWlC,KACXkC,EAAW1C,OACX0C,EAAWjC,UACXiC,EAAWhC,WARE,SAWUX,EAAY2C,EAAW1C,QAXjC,OAWT2C,EAXS,OAafX,EAAgBW,GAbD,2CAAH,sDAyChB,OACE,uBACEnB,UAAU,iBACVoB,SA3BkB,SAACC,GAGrB,GAFAA,EAAMC,iBAEFb,GAAYE,GAAaE,GAAeN,EAAc,CACxD,IAAMW,EAAa,CACjBxC,GAAI6B,EAAagB,OAAS,EAC1B/C,OAAQ+B,EAAa,GAAG/B,OACxBM,KAAM2B,EACN1B,MAAO4B,EACP3B,KAAM6B,EACN5B,UAAU,GAAD,OAAK,IAAIuC,MAClBtC,UAAU,GAAD,OAAK,IAAIsC,OAGpBP,EAAWC,GACXF,GAAS,GACTN,EAAY,IACZE,EAAa,IACbE,EAAe,SAEfE,GAAS,IAKX,UAIE,qBAAKhB,UAAU,aAAf,SACE,uBACEG,KAAK,OACLrB,KAAK,OACL2C,YAAY,YACZC,MAAOjB,EACPT,UAAU,wBACV2B,SAAU,SAACN,GACTX,EAAYW,EAAMO,OAAOF,YAK/B,qBAAK1B,UAAU,aAAf,SACE,uBACEG,KAAK,OACLrB,KAAK,QACL2C,YAAY,aACZzB,UAAU,wBACV0B,MAAOf,EACPgB,SAAU,SAACN,GACTT,EAAaS,EAAMO,OAAOF,YAKhC,qBAAK1B,UAAU,aAAf,SACE,0BACElB,KAAK,OACL2C,YAAY,oBACZzB,UAAU,wBACV0B,MAAOb,EACPc,SAAU,SAACN,GACTP,EAAeO,EAAMO,OAAOF,YAIjCX,GACC,qBAAKc,MAAO,CAAEC,MAAO,OAArB,8BAKF,wBACE3B,KAAK,SACLH,UAAU,uCAFZ,gCChGO+B,G,MAA+B,SAAC,GAGtC,IAFLtC,EAEI,EAFJA,KACAC,EACI,EADJA,aAEA,EAAwCC,mBAAoB,IAA5D,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAA8Cb,oBAAS,GAAvD,mBAAOqC,EAAP,KAAwBC,EAAxB,KAGMC,EAAY,uCAAG,4BAAAnE,EAAA,0DACf0B,EADe,gCAEIlB,EAAW,OAACkB,QAAD,IAACA,OAAD,EAACA,EAAMf,IAFtB,OAEXE,EAFW,OAIjB4B,EAAgB5B,GAChBc,GAAa,GALI,2CAAH,qDASZyC,EAAa,uCAAG,WAAOzD,GAAP,SAAAX,EAAA,0DAChBwC,EADgB,gCAEZ9B,EAAWC,GAFC,OAGlBwD,IAHkB,2CAAH,sDAYnB,OALAnC,qBAAU,WACRL,GAAa,GACbwC,MACC,CAACzC,IAGF,sBAAKO,UAAU,cAAf,UACE,+CACCP,GACC,qCACE,yBAASO,UAAU,oBAAnB,SACE,mCACGP,QADH,IACGA,OADH,EACGA,EAAM2C,UAGX,0BAASpC,UAAU,wBAAnB,UACE,wBACEG,KAAK,SACLH,UAAU,SACVI,QAAS,WACP6B,GAAoBD,IAJxB,SAOGzB,IAAkByB,EAAD,eACNzB,EAAagB,OADP,4BAENhB,EAAagB,OAFP,gBAIpB,qBACEvB,UAAWgC,EACP,2BACA,oBAHN,UAKGzB,GAAgBA,EAAaN,KAAI,SAAAoC,GAAI,OACpC,qBACErC,UAAU,yBADZ,UAIE,wBACEG,KAAK,SACLH,UAAU,oCACVI,QAAS,WACP+B,EAAcE,EAAK3D,KAJvB,eASA,4BAAI2D,EAAKrD,SAXJqD,EAAK3D,OAcbgB,GAAa,SAIlB,kCACE,qBAAKM,UAAU,4BAAf,SACE,cAAC,EAAD,CACEO,aAAcA,EACdC,gBAAiBA,gBCzFpB8B,G,MAAmB,kBAC9B,qBAAKtC,UAAU,SAAf,SACE,qBAAKA,UAAU,wBC0DJuC,EAvDO,WACpB,MAAsC5C,mBAAS,KAA/C,mBAAO6C,EAAP,KAAoBC,EAApB,KACA,EAAwC9C,qBAAxC,mBAAO+C,EAAP,KAAqBC,EAArB,KACA,EAAkChD,oBAAS,GAA3C,mBAAOiD,EAAP,KAAkBlD,EAAlB,KAEA,OACE,sBAAKM,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEA,UAAU,qBACV0B,MAAOc,EACPb,SAAU,SAACN,GACToB,EAAepB,EAAMO,OAAOF,OAC5BhC,GAAa,IALjB,UAQE,wBAAQgC,MAAM,IAAImB,UAAQ,EAA1B,uBACA,wBAAQnB,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAIN,uBAAM1B,UAAU,YAAhB,UACE,sBAAKA,UAAU,eAAf,UACG4C,GAAa,cAAC,EAAD,IACd,cAAC,EAAD,CACErD,eAAgBiD,EAChBhD,WAAYmD,EACZlD,KAAMiD,EACNhD,aAAcA,OAIlB,qBAAKM,UAAU,eAAf,SACE,cAAC,EAAD,CACEP,KAAMiD,EACNhD,aAAcA,aCnD1BoD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5e2dbe62.chunk.js","sourcesContent":["import { Post } from '../react-app-env';\n\nexport const BASE_URL = 'https://mate.academy/students-api/';\n\nexport async function getPosts(userId: string): Promise<Post[]> {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\n// eslint-disable-next-line max-len\nexport async function getComments(postId: number) {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  // console.log(response.json())\n  return response.json();\n}\n\nexport async function delComment(id : number) {\n  const result = await fetch(`${BASE_URL}/comments/${id}`, { method: 'DELETE' });\n\n  return result;\n}\n\nexport async function postComment(\n  name : string,\n  email : string,\n  body : string,\n  postId: number,\n  createdAt: string,\n  updatedAt: string,\n) {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n      createdAt,\n      updatedAt,\n    }),\n  });\n}\n\n// export async function getUser(userId: number): Promise<User> {\n//   const response = await fetch(`${BASE_URL}/users/${userId}`);\n\n//   return response.json();\n// }\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport { getPosts } from '../../api/api';\nimport { Post } from '../../react-app-env';\n\ntype Props = {\n  userSelectedId: string;\n  selectPost: (arg?: Post) => void;\n  post: Post | undefined;\n  setIsLoading: (arg: boolean) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  userSelectedId,\n  selectPost,\n  post,\n  setIsLoading,\n}) => {\n  const [currentPostList, setPostList] = useState<Post[]>([]);\n\n  const findposts = async () => {\n    const result = await getPosts(userSelectedId);\n\n    setPostList(result);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    findposts();\n  }, [userSelectedId]);\n\n  return (\n    <div className=\"PostsList\">\n      <>\n        <h2>Posts:</h2>\n        <ul\n          className=\"PostsList__list\"\n          data-cy=\"postDetails\"\n        >\n          {currentPostList.map(po => (\n            <li\n              className=\"PostsList__item\"\n              key={po.id}\n            >\n              <div>\n                <b>\n                  [User\n                  {' '}\n                  {po.userId}\n                  ]:\n                  {' '}\n                </b>\n                {po.body}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  if ((post) && (post.id === po.id)) {\n                    selectPost(undefined);\n                  } else {\n                    selectPost(po);\n                  }\n\n                  setIsLoading(true);\n                }}\n              >\n                {post && (post.id === po.id)\n                  ? 'Close'\n                  : 'Open'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    </div>\n  );\n};\n","import './NewCommentForm.scss';\nimport React, { FormEvent, useState } from 'react';\nimport { Comment } from '../../react-app-env';\nimport { postComment, getComments } from '../../api/api';\n\ntype Props = {\n  commentsList: Comment[] | undefined;\n  setCommentsList: (arg:Comment[]) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  commentsList, setCommentsList,\n}) => {\n  const [yourname, setYourname] = useState('');\n  const [youremail, setYouremail] = useState('');\n  const [yourcomment, setYourcomment] = useState('');\n  const [error, setError] = useState(false);\n\n  const addComment = async (newComment: Comment) => {\n    if (commentsList) {\n      postComment(\n        newComment.name,\n        newComment.email,\n        newComment.body,\n        newComment.postId,\n        newComment.createdAt,\n        newComment.updatedAt,\n      );\n\n      const afterAdded = await getComments(newComment.postId);\n\n      setCommentsList(afterAdded);\n    }\n  };\n\n  const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (yourname && youremail && yourcomment && commentsList) {\n      const newComment = {\n        id: commentsList.length + 1,\n        postId: commentsList[0].postId,\n        name: yourname,\n        email: youremail,\n        body: yourcomment,\n        createdAt: `${new Date()}`,\n        updatedAt: `${new Date()}`,\n      };\n\n      addComment(newComment);\n      setError(false);\n      setYourname('');\n      setYouremail('');\n      setYourcomment('');\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={submitHandler}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          value={yourname}\n          className=\"NewCommentForm__input\"\n          onChange={(event) => {\n            setYourname(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={youremail}\n          onChange={(event) => {\n            setYouremail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={yourcomment}\n          onChange={(event) => {\n            setYourcomment(event.target.value);\n          }}\n        />\n      </div>\n      {error && (\n        <div style={{ color: 'red' }}>\n          Add correct data\n        </div>\n      )}\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { Post, Comment } from '../../react-app-env';\nimport { getComments, delComment } from '../../api/api';\n\ntype Props = {\n  post: Post | undefined;\n  setIsLoading: (arg: boolean) => void,\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  post,\n  setIsLoading,\n}) => {\n  const [commentsList, setCommentsList] = useState<Comment[]>([]);\n  const [visiblecomments, setVisiblecomments] = useState(false);\n  //  console.log(post);\n\n  const findcomments = async () => {\n    if (post) {\n      const result = await getComments(post?.id);\n\n      setCommentsList(result);\n      setIsLoading(false);\n    }\n  };\n\n  const deletecomment = async (id: number) => {\n    if (commentsList) {\n      await delComment(id);\n      findcomments();\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    findcomments();\n  }, [post]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {post && (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>\n              {post?.title}\n            </p>\n          </section>\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                setVisiblecomments(!visiblecomments);\n              }}\n            >\n              {commentsList && ((visiblecomments)\n                ? `Show ${commentsList.length} comments`\n                : `Hide ${commentsList.length} comments`)}\n            </button>\n            <ul\n              className={visiblecomments\n                ? 'PostDetails__visiblelist'\n                : 'PostDetails__list'}\n            >\n              {commentsList && commentsList.map(comm => (\n                <li\n                  className=\"PostDetails__list-item\"\n                  key={comm.id}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => {\n                      deletecomment(comm.id);\n                    }}\n                  >\n                    X\n                  </button>\n                  <p>{comm.body}</p>\n                </li>\n              ))}\n              {setIsLoading(false)}\n            </ul>\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                commentsList={commentsList}\n                setCommentsList={setCommentsList}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Post } from './react-app-env';\nimport { Loader } from './components/Loader';\n\nconst App: React.FC = () => {\n  const [currentUser, setCurrentUser] = useState('0');\n  const [selectedPost, setSelectedPost] = useState<Post>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={currentUser}\n            onChange={(event) => {\n              setCurrentUser(event.target.value);\n              setIsLoading(true);\n            }}\n          >\n            <option value=\"0\" disabled>All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {isLoading && <Loader />}\n          <PostsList\n            userSelectedId={currentUser}\n            selectPost={setSelectedPost}\n            post={selectedPost}\n            setIsLoading={setIsLoading}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            post={selectedPost}\n            setIsLoading={setIsLoading}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}